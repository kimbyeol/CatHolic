package com.hanul.CatHolic;



import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.HashMap;
import java.util.Locale;

import javax.servlet.http.HttpSession;

import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Controller;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.bind.annotation.ResponseBody;
import org.springframework.web.multipart.MultipartFile;

import com.google.gson.Gson;


import common.service.CommonService;
import member.dto.MemberDTO;
import oracle.sql.DATE;
import pet.dto.PetDTO;
import pet.service.PetService;

@Controller
public class PetController {
	@Autowired PetService service;
	@Autowired CommonService comm;
	Gson gson= new Gson();
	@ResponseBody
	@RequestMapping("/minsert.pet")
	public String pet_insert(@RequestPart(required=false) MultipartFile image, String gender,  String petname, String species,String pet_birth, String owner, HttpSession session) {
		PetDTO dto = new PetDTO();
		dto.setGender(gender);
		dto.setOwner(owner);
		dto.setSpecies(species);
		dto.setPetname(petname);
		Date date = null;
		try {
			date = (Date) new SimpleDateFormat("yyyy-MM-dd",Locale.KOREA).parse(pet_birth);
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		
		
	   dto.setPet_birth(date);
		dto.setImagename("");
		dto.setImagepath("");
		
		if(image!=null) {
			System.out.println(image.getName());
			System.out.println(image.getSize());
			System.out.println(image.getOriginalFilename());
			if(image.getSize()>0) {
				dto.setImagepath(comm.upload("board", image, session));
				dto.setImagename(image.getOriginalFilename());
			}
		}
		System.out.println(gender);
		System.out.println(owner);
		System.out.println(species);
		System.out.println(petname);
		
		service.insert_pet(dto);
		System.out.println("옵니다테스트");
		return "String";
	}

	@ResponseBody
	@RequestMapping("/mupdate.pet")
	public String pet_update(PetDTO dto ,@RequestBody HashMap<String, String> map) {
		dto.setGender(map.get("gender"));
		Date date=null; 
		try {
			date = (Date) new SimpleDateFormat("yyyy-MM-dd").parse(map.get("pet_birth").toString());
		} catch (ParseException e) {
			// TODO Auto-generated catch block
			e.printStackTrace();
		}
		dto.setPet_birth(date);
		dto.setPetname(map.get("petname"));
		dto.setId(Integer.parseInt(map.get("id")));
		dto.setSpecies(map.get("species"));
		System.out.println(map.get("pet_birth").toString());
		
		String dd=service.update_pet(dto);
		HashMap<String, String> map2 = new HashMap<String, String>();
		map2.put("succ",dd);
	
		Gson gson= new Gson();
		String pet=gson.toJson(map2);
		System.out.println(pet);
		return pet;
	}

	@ResponseBody
	@RequestMapping("/mlist.pet")
	public String pet_list(@RequestParam String owner) {
		System.out.println(owner);
		String realpath="http://192.168.0.99:80/CatHolic/resources";
		ArrayList<PetDTO> dto=(ArrayList<PetDTO>) service.list_pet(owner);
		if(dto==null) {
			
		}else {
			for (int i = 0; i < dto.size(); i++) {
				dto.get(i).setImagepath(realpath+dto.get(i).getImagepath());			}
		}
		Gson gson= new Gson();
		String Li=gson.toJson(dto);
		System.out.println(service.list_pet(owner).size());
		return Li;
	}
	@ResponseBody
	@RequestMapping("/mdelete.pet")
	public String pet_delete(@RequestParam String id) {
		System.out.println(id);
		HashMap<String, String> map = new HashMap<String, String>();
		map.put("succ",service.delete_pet(Integer.parseInt(id)));
		Gson gson= new Gson();
		String pet=gson.toJson(map);
		
		return pet;
	}
	@RequestMapping("/petinsert")
	public String petinsert() {
		return "member/mypet";
	}
	@RequestMapping("/insert_webpet")
	public String petinsert_web(PetDTO vo,@RequestParam MultipartFile petimg,HttpSession session) {
		vo.setOwner(((MemberDTO)session.getAttribute("login_info")).getNickname());//아이디를 저장
		vo.setImagepath("");
		vo.setImagename("");
		if(petimg.getSize()>0) {
			vo.setImagepath(comm.upload("board", petimg, session));
			vo.setImagename(petimg.getOriginalFilename());
		}
		service.insert_webpet(vo);
		
		
		return "redirect:mypage.mem";
		
	}
	@RequestMapping("list.webpet")
	public String list_pet(String owner) {
		return "";
	}
}
